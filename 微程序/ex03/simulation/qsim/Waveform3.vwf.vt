// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/16/2021 15:59:09"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ex03
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ex03_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK_CONTINUOUS;
reg CLK_SINGLESTEP;
reg G;
reg OPEN;
// wires                                               
wire [15:0] PCO;
wire P_RAMO;
wire P_RO;
wire P_UPCO;
wire [15:0] R2O;
wire [15:0] R6O;
wire [15:0] R7O;

// assign statements (if any)                          
ex03 i1 (
// port map - connection between master ports and signals/registers   
	.CLK_CONTINUOUS(CLK_CONTINUOUS),
	.CLK_SINGLESTEP(CLK_SINGLESTEP),
	.G(G),
	.OPEN(OPEN),
	.PCO(PCO),
	.P_RAMO(P_RAMO),
	.P_RO(P_RO),
	.P_UPCO(P_UPCO),
	.R2O(R2O),
	.R6O(R6O),
	.R7O(R7O)
);
initial 
begin 
#1000000 $finish;
end 

// CLK_CONTINUOUS
always
begin
	CLK_CONTINUOUS = 1'b0;
	CLK_CONTINUOUS = #5000 1'b1;
	#5000;
end 

// CLK_SINGLESTEP
initial
begin
	CLK_SINGLESTEP = 1'b0;
end 

// G
initial
begin
	G = 1'b1;
end 

// OPEN
initial
begin
	OPEN = 1'b1;
end 
endmodule

